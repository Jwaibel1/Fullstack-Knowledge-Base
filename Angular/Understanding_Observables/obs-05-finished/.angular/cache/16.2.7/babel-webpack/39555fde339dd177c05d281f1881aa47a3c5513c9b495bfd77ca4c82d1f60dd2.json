{"ast":null,"code":"import { Subscription, Observable } from \"rxjs\";\nimport { map, filter } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor() {}\n    ngOnInit() {\n      // this.firstObsSubscription = interval(1000).subscribe(count => {\n      //   console.log(count);\n      // });\n      const customIntervalObservable = Observable.create(observer => {\n        let count = 0;\n        setInterval(() => {\n          observer.next(count);\n          if (count === 5) {\n            observer.complete();\n          }\n          if (count > 3) {\n            observer.error(new Error(\"Count is greater 3!\"));\n          }\n          count++;\n        }, 1000);\n      });\n      this.firstObsSubscription = customIntervalObservable.pipe(filter(data => {\n        return data > 0;\n      }), map(data => {\n        return \"Round: \" + (data + 1);\n      })).subscribe(data => {\n        console.log(data);\n      }, error => {\n        console.log(error);\n        alert(error.message);\n      }, () => {\n        console.log(\"Completed!\");\n      });\n    }\n    ngOnDestroy() {\n      this.firstObsSubscription.unsubscribe();\n    }\n    static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 2,\n      vars: 0,\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Yay, I'm home!\");\n          i0.ɵɵelementEnd();\n        }\n      }\n    });\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}